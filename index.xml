<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>メモ</title><link>https://kaito-aai.github.io/</link><description>Recent content on メモ</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Jun 2022 23:58:38 +0900</lastBuildDate><atom:link href="https://kaito-aai.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Widening</title><link>https://kaito-aai.github.io/posts/typescript/ts2322errorwhenstyling/</link><pubDate>Mon, 27 Jun 2022 23:58:38 +0900</pubDate><guid>https://kaito-aai.github.io/posts/typescript/ts2322errorwhenstyling/</guid><description>Widening ReactでコンポーネントをスタイリングしていたらTypescript関連のエラーがでたのでメモ。
以下のようなコードを書いた
const Component = () =&amp;gt; { const divStyle = { display: &amp;#34;flex&amp;#34;, flexDirection: &amp;#34;row&amp;#34;, }; return ( &amp;lt;div style={divStyle}&amp;gt;&amp;lt;/div&amp;gt; ); } 出てきたエラー
Type &amp;lsquo;{ display: string; flexDirection: string; }&amp;rsquo; is not assignable to type &amp;lsquo;Properties&amp;lt;string | number, string &amp;amp; {}&amp;gt;&amp;rsquo;. Types of property &amp;lsquo;flexDirection&amp;rsquo; are incompatible. Type &amp;lsquo;string&amp;rsquo; is not assignable to type &amp;lsquo;FlexDirection | undefined&amp;rsquo;.ts(2322)
FlexDirection型を設定すべきところ、&amp;ldquo;row&amp;quot;がstring型になってしまっていた (TypescriptのWideningによるもの)
const assertionでWideningを抑制して解決
以下のコードに修正
const Component = () =&amp;gt; { const divStyle = { display: &amp;#34;flex&amp;#34;, flexDirection: &amp;#34;row&amp;#34; as const, // const assertion }; return ( &amp;lt;div style={divStyle}&amp;gt;&amp;lt;/div&amp;gt; ); }</description></item><item><title>Hello</title><link>https://kaito-aai.github.io/posts/hello/</link><pubDate>Mon, 27 Jun 2022 01:05:38 +0900</pubDate><guid>https://kaito-aai.github.io/posts/hello/</guid><description>テストページ aaa
a b c abcde
interface A { prop: string; } var a: A = { prop: &amp;#34;a&amp;#34; }; alert(a);</description></item></channel></rss>